package springmvc.web.validator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import springmvc.model.Users;
import springmvc.model.dao.UsersDao;

@Component
public class UserValidator implements Validator{

	 @Autowired
	    UsersDao usersDao;
	 
	@Override
	public boolean supports(Class<?> clazz) {

		return Users.class.isAssignableFrom(clazz);
	}

	@Override
	public void validate(Object target, Errors errors) {

		Users user = (Users) target;
	    Long id = user.getId();
		
	    if( !StringUtils.hasText(user.getLastName()) )
			errors.rejectValue("lastName", "error.field.empty");
		if( !StringUtils.hasText(user.getFirstName()) )
			errors.rejectValue("firstName", "error.field.empty");
		if( !StringUtils.hasText(user.getEmail()) )
			errors.rejectValue("email", "error.field.empty");
		if( !StringUtils.hasText(user.getPassword()) )
			errors.rejectValue("password", "error.field.empty");
		if( !StringUtils.hasText(user.getType()) )
			errors.rejectValue("type", "error.field.empty");
		
		String email = user.getEmail();
        if( StringUtils.hasText( email ) )
        {
            Users u = usersDao.getUserByEmail( email );
            if( u != null && !(u.getId() == id ) )
                errors.rejectValue( "Email", "error.user.email.taken" );
        }
		
	}

}
